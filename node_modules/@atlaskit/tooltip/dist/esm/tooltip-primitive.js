import _defineProperty from "@babel/runtime/helpers/defineProperty";
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { forwardRef } from 'react';

// eslint-disable-next-line @atlaskit/ui-styling-standard/use-compiled -- Ignored via go/DSP-18766
import { css, jsx } from '@emotion/react';
import { layers } from '@atlaskit/theme/constants';
var VAR_PRIMITIVE_ZINDEX = 'tooltipPrimitiveZindex';
var primitiveStyles = css({
  zindex: "var(".concat(VAR_PRIMITIVE_ZINDEX, ")"),
  cursor: "default"
});

/**
 * The lower level component for rendering a tooltip.
 */
var TooltipPrimitive = /*#__PURE__*/forwardRef(function TooltipPrimitive(_ref, ref) {
  var style = _ref.style,
    className = _ref.className,
    children = _ref.children,
    placement = _ref.placement,
    testId = _ref.testId,
    onMouseOut = _ref.onMouseOut,
    onMouseOver = _ref.onMouseOver,
    id = _ref.id;
  var styleWithZIndex = _objectSpread(_objectSpread({}, style), {}, _defineProperty({}, VAR_PRIMITIVE_ZINDEX, layers.tooltip()));
  return jsx("div", {
    ref: ref
    // eslint-disable-next-line @atlaskit/ui-styling-standard/enforce-style-prop -- Ignored via go/DSP-18766
    ,
    style: styleWithZIndex,
    "data-testid": testId ? "".concat(testId, "--wrapper") : undefined
  }, jsx("div", {
    role: "tooltip"
    // eslint-disable-next-line @atlaskit/ui-styling-standard/no-classname-prop -- Ignored via go/DSP-18766
    ,
    className: className
    // Because the tooltip should not be focusable, there is no reason to have key events.
    /* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */,
    onMouseOut: onMouseOut
    /* eslint-disable-next-line jsx-a11y/mouse-events-have-key-events */,
    onMouseOver: onMouseOver,
    css: primitiveStyles,
    "data-placement": placement,
    "data-testid": testId,
    id: id
  }, children));
});
TooltipPrimitive.displayName = 'TooltipPrimitive';
export default TooltipPrimitive;