/**
 * @jsxRuntime classic
 * @jsx jsx
 */
import { type ChangeEvent } from 'react';
import type UIAnalyticsEvent from '@atlaskit/analytics-next/UIAnalyticsEvent';
/**
 * __Checkbox__
 *
 * A checkbox an input control that allows a user to select one or more options from a number of choices.
 *
 * - [Examples](https://atlassian.design/components/checkbox/examples)
 * - [Code](https://atlassian.design/components/checkbox/code)
 * - [Usage](https://atlassian.design/components/checkbox/usage)
 */
declare const Checkbox: import("react").MemoExoticComponent<import("react").ForwardRefExoticComponent<Omit<Omit<import("react").InputHTMLAttributes<HTMLInputElement>, "disabled" | "required" | "checked" | "css">, keyof {
    defaultChecked?: boolean | undefined;
    id?: string | undefined;
    isChecked?: boolean | undefined;
    isDisabled?: boolean | undefined;
    isIndeterminate?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isRequired?: boolean | undefined;
    label?: import("react").ReactChild | undefined;
    name?: string | undefined;
    onChange?: ((e: ChangeEvent<HTMLInputElement>, analyticsEvent: UIAnalyticsEvent) => void) | undefined;
    value?: string | number | undefined;
    testId?: string | undefined;
    analyticsContext?: Record<string, any> | undefined;
    xcss?: import("@atlaskit/css").StrictXCSSProp<"alignItems", never>;
}> & {
    defaultChecked?: boolean | undefined;
    id?: string | undefined;
    isChecked?: boolean | undefined;
    isDisabled?: boolean | undefined;
    isIndeterminate?: boolean | undefined;
    isInvalid?: boolean | undefined;
    isRequired?: boolean | undefined;
    label?: import("react").ReactChild | undefined;
    name?: string | undefined;
    onChange?: ((e: ChangeEvent<HTMLInputElement>, analyticsEvent: UIAnalyticsEvent) => void) | undefined;
    value?: string | number | undefined;
    testId?: string | undefined;
    analyticsContext?: Record<string, any> | undefined;
    xcss?: import("@atlaskit/css").StrictXCSSProp<"alignItems", never>;
} & import("react").RefAttributes<HTMLInputElement>>>;
export default Checkbox;
