import { IndexQueryBuilder } from './entity-query';
import { QueryBuilder } from './query';
import { TransactionBuilder } from './transaction';
export interface Kvs {
    get<T>(key: string): Promise<T | undefined>;
    set<T>(key: string, value: T): Promise<void>;
    delete(key: string): Promise<void>;
    query(): QueryBuilder;
    getSecret<T>(key: string): Promise<T | undefined>;
    setSecret<T>(key: string, value: T): Promise<void>;
    deleteSecret(key: string): Promise<void>;
    entity<T>(entityName: string): KvsEntity<T>;
    transact(): TransactionBuilder;
}
export interface KvsEntity<T> {
    get(key: string): Promise<T | undefined>;
    set(key: string, value: T): Promise<void>;
    delete(key: string): Promise<void>;
    query(): IndexQueryBuilder<T>;
}
//# sourceMappingURL=kvs.d.ts.map