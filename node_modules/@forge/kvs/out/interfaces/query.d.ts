import { BeginsWithClause, ListResult, Result } from './types';
export declare type WhereClause = BeginsWithClause;
export interface QueryBuilder {
    where(property: 'key', condition: WhereClause): QueryBuilder;
    cursor(cursor: string): QueryBuilder;
    limit(limit: number): QueryBuilder;
    getMany<T>(): Promise<ListResult<T>>;
    getOne<T>(): Promise<Result<T> | undefined>;
}
export interface QueryOptions {
    where?: Array<{
        property: 'key';
    } & WhereClause>;
    cursor?: string;
    limit?: number;
}
//# sourceMappingURL=query.d.ts.map