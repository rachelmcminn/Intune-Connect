"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FilterConditions = exports.WhereConditions = void 0;
function between(firstValue, secondValue) {
    return {
        condition: 'BETWEEN',
        values: [firstValue, secondValue]
    };
}
function beginsWith(value) {
    return {
        condition: 'BEGINS_WITH',
        values: [value]
    };
}
function exists() {
    return {
        condition: 'EXISTS',
        values: [true]
    };
}
function notExists() {
    return {
        condition: 'NOT_EXISTS',
        values: [true]
    };
}
function greaterThan(value) {
    return {
        condition: 'GREATER_THAN',
        values: [value]
    };
}
function greaterThanEqualTo(value) {
    return {
        condition: 'GREATER_THAN_EQUAL_TO',
        values: [value]
    };
}
function lessThan(value) {
    return {
        condition: 'LESS_THAN',
        values: [value]
    };
}
function lessThanEqualTo(value) {
    return {
        condition: 'LESS_THAN_EQUAL_TO',
        values: [value]
    };
}
function contains(value) {
    return {
        condition: 'CONTAINS',
        values: [value]
    };
}
function notContains(value) {
    return {
        condition: 'NOT_CONTAINS',
        values: [value]
    };
}
function equalTo(value) {
    return {
        condition: 'EQUAL_TO',
        values: [value]
    };
}
function notEqualTo(value) {
    return {
        condition: 'NOT_EQUAL_TO',
        values: [value]
    };
}
exports.WhereConditions = {
    beginsWith,
    between,
    equalTo,
    greaterThan,
    greaterThanEqualTo,
    lessThan,
    lessThanEqualTo
};
exports.FilterConditions = {
    beginsWith,
    between,
    contains,
    notContains,
    equalTo,
    notEqualTo,
    exists,
    notExists,
    greaterThan,
    greaterThanEqualTo,
    lessThan,
    lessThanEqualTo
};
