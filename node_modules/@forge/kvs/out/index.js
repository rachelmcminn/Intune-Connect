"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.kvs = exports.Filter = exports.FilterConditions = exports.WhereConditions = void 0;
const tslib_1 = require("tslib");
const kvs_1 = require("./kvs");
const storage_api_1 = require("./storage-api");
function getFetchClient() {
    const runtime = global.__forge_runtime__;
    if (runtime?.kvs?.url && runtime?.kvs?.host) {
        const { proxy, kvs, tracing } = runtime;
        return async function (path, options) {
            return await global.__forge_fetch__({ type: 'kvs' }, path, {
                ...options,
                headers: {
                    ...options?.headers,
                    Authorization: `Bearer ${proxy.token}`,
                    Host: kvs?.host,
                    'x-b3-traceid': tracing.traceId,
                    'x-b3-spanid': tracing.spanId
                }
            });
        };
    }
    return async function (path, options) {
        return await global.__forge_fetch__({
            type: 'kvs',
            provider: 'app',
            remote: 'kvs'
        }, path, options);
    };
}
const storageApi = new storage_api_1.StorageApi(getFetchClient());
const kvs = new kvs_1.KvsImpl(storageApi);
exports.kvs = kvs;
tslib_1.__exportStar(require("./interfaces/types"), exports);
tslib_1.__exportStar(require("./errors"), exports);
var conditions_1 = require("./conditions");
Object.defineProperty(exports, "WhereConditions", { enumerable: true, get: function () { return conditions_1.WhereConditions; } });
Object.defineProperty(exports, "FilterConditions", { enumerable: true, get: function () { return conditions_1.FilterConditions; } });
var entity_query_1 = require("./entity-query");
Object.defineProperty(exports, "Filter", { enumerable: true, get: function () { return entity_query_1.FilterBuilder; } });
exports.default = kvs;
