import { FetchMethod } from '@forge/api';
import { ListResult } from './interfaces/types';
import { DeleteRequest, EntityDeleteRequest, EntityGetRequest, EntityQueryRequest, EntitySetRequest, GetRequest, QueryRequest, SecretDeleteRequest, SecretGetRequest, SecretSetRequest, SetRequest, TransactionRequest } from './interfaces/kvs-api';
export declare class StorageApi {
    private apiClient;
    constructor(apiClient: FetchMethod);
    get<T>(body: GetRequest): Promise<T | undefined>;
    getSecret<T>(body: SecretGetRequest): Promise<T | undefined>;
    getEntity<T>(body: EntityGetRequest): Promise<T | undefined>;
    set<T>(body: SetRequest<T>): Promise<void>;
    setSecret<T>(body: SecretSetRequest<T>): Promise<void>;
    setEntity<T>(body: EntitySetRequest<T>): Promise<void>;
    delete(body: DeleteRequest): Promise<void>;
    deleteSecret(body: SecretDeleteRequest): Promise<void>;
    deleteEntity(body: EntityDeleteRequest): Promise<void>;
    query<T>(body: QueryRequest): Promise<ListResult<T>>;
    queryEntity<T>(body: EntityQueryRequest): Promise<ListResult<T>>;
    transact<T>(transactionRequest: TransactionRequest<T>): Promise<void>;
    private handleKeyNotFound;
    private request;
}
//# sourceMappingURL=storage-api.d.ts.map