import { KvsEntity, Kvs } from './interfaces/kvs';
import { QueryBuilder } from './interfaces/query';
import { TransactionBuilder } from './interfaces/transaction';
import { StorageApi } from './storage-api';
export declare class KvsImpl implements Kvs {
    private readonly storageApi;
    constructor(storageApi: StorageApi);
    get<T>(key: string): Promise<T | undefined>;
    set<T>(key: string, value: T): Promise<void>;
    delete(key: string): Promise<void>;
    query(): QueryBuilder;
    getSecret<T>(key: string): Promise<T | undefined>;
    setSecret<T>(key: string, value: T): Promise<void>;
    deleteSecret(key: string): Promise<void>;
    entity<T>(entityName: string): KvsEntity<T>;
    transact(): TransactionBuilder;
}
//# sourceMappingURL=kvs.d.ts.map