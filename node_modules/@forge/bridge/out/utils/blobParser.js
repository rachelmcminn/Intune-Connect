"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.blobToBase64 = exports.base64ToBlob = void 0;
const base64ToBlob = (b64string, mimeType) => {
    if (!b64string) {
        return null;
    }
    const base64Data = b64string.includes(';base64') ? b64string.split(',')[1] : b64string;
    const byteCharacters = atob(base64Data);
    const byteNumbers = new Array(byteCharacters.length);
    for (let i = 0; i < byteCharacters.length; i++) {
        byteNumbers[i] = byteCharacters.charCodeAt(i);
    }
    const byteArray = new Uint8Array(byteNumbers);
    return new Blob([byteArray], { type: mimeType });
};
exports.base64ToBlob = base64ToBlob;
const blobToBase64 = (blob) => {
    return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.onloadend = () => {
            resolve(reader.result);
        };
        reader.onerror = reject;
        reader.readAsDataURL(blob);
    });
};
exports.blobToBase64 = blobToBase64;
