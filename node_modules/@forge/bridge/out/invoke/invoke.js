"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.invoke = void 0;
const bridge_1 = require("../bridge");
const errors_1 = require("../errors");
const utils_1 = require("../utils");
const callBridge = (0, bridge_1.getCallBridge)();
const validatePayload = (payload) => {
    if (!payload)
        return;
    if (Object.values(payload).some((val) => typeof val === 'function')) {
        throw new errors_1.BridgeAPIError('Passing functions as part of the payload is not supported!');
    }
};
const _invoke = (functionKey, payload) => {
    if (typeof functionKey !== 'string') {
        throw new errors_1.BridgeAPIError('functionKey must be a string!');
    }
    validatePayload(payload);
    return callBridge('invoke', { functionKey, payload });
};
exports.invoke = (0, utils_1.withRateLimiter)(_invoke, 500, 1000 * 25, 'Resolver calls are rate limited at 500req/25s');
